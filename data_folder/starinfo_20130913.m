function s = starinfo(s)
if exist('s','var')&&isfield(s,'t')&&~isempty(s.t)
   daystr = datestr(s.t(1),'yyyymmdd');
else
   daystr=evalin('caller','daystr');
end

toggle = update_toggle;
if isfield(s, 'toggle')
   toggle = catstruct(s.toggle, toggle);
end
s.toggle = toggle;

%get variables from caller 
 
 
flight=[datenum('15:35:36') datenum('23:42:54')]-datenum('00:00:00')+datenum([daystr(1:4) '-' daystr(5:6) '-' daystr(7:8)]); 
horilegs=[datenum('16:00:18') datenum('16:20:28');... 
datenum('16:27:17') datenum('16:44:52');... 
datenum('16:49:44') datenum('16:53:18');... 
datenum('17:12:50') datenum('17:45:02');... 
datenum('18:23:30') datenum('19:01:02');... 
datenum('19:55:44') datenum('20:07:12');... 
datenum('20:12:35') datenum('20:23:44');... 
datenum('20:29:13') datenum('20:50:20');... 
datenum('20:56:57') datenum('21:16:09');... 
datenum('21:21:24') datenum('21:31:23');... 
datenum('21:36:49') datenum('21:39:33');... 
datenum('21:54:33') datenum('21:58:23');... 
datenum('22:00:00') datenum('22:02:24');... 
datenum('22:03:43') datenum('22:13:53');... 
datenum('22:15:52') datenum('22:21:03');... 
datenum('22:36:18') datenum('22:44:13');... 
datenum('22:48:11') datenum('23:17:39');... 
datenum('23:22:20') datenum('23:26:57');... 
datenum('23:34:39') datenum('23:37:48');... 
datenum('23:42:53') datenum('23:51:26');... 
    ]-datenum('00:00:00')+datenum([daystr(1:4) '-' daystr(5:6) '-' daystr(7:8)]); 
vertprofs=[datenum('15:35:39') datenum('16:49:20');... 
datenum('16:53:18') datenum('17:12:48');... 
datenum('20:23:45') datenum('20:29:12');... 
datenum('20:50:20') datenum('20:56:57');... 
datenum('21:16:09') datenum('21:21:22');... 
datenum('21:31:25') datenum('21:36:49');... 
datenum('21:39:33') datenum('21:54:33');... 
datenum('21:58:23') datenum('22:00:00');... 
datenum('22:02:24') datenum('22:03:42');... 
datenum('22:13:53') datenum('22:15:52');... 
datenum('22:21:03') datenum('22:36:18');... 
datenum('22:44:13') datenum('23:42:53');... 
    ]-datenum('00:00:00')+datenum([daystr(1:4) '-' daystr(5:6) '-' daystr(7:8)]); 
 
% STD-based cloud screening for direct Sun measurements 
s.sd_aero_crit=0.01; 
 
% Ozone and other gases 
s.O3h=21; 
s.O3col=0.300;  % Yohei's guess, to be updated 
s.NO2col=5e15; % Yohei's guess, to be updated 
 
% other tweaks 
if isfield(s, 'Pst'); 
    s.Pst(find(s.Pst<10))=1013; 
end; 
if isfield(s, 'Lon') & isfield(s, 'Lat'); 
    s.Lon(s.Lon==0 & s.Lat==0)=NaN; 
    s.Lat(s.Lon==0 & s.Lat==0)=NaN; 
end; 
if isfield(s, 'AZstep') & isfield(s, 'AZ_deg'); 
    s.AZ_deg=s.AZstep/(-50); 
end; 
 
% notes 
if isfield(s, 'note'); 
    s.note(end+1,1) = {['See ' mfilename '.m for additional info. ']}; 
end; 
 
%push variable to caller 
varNames=who(); 
for i=1:length(varNames) 
  assignin('caller',varNames{i},eval(varNames{i})); 
end; 
end 
 

%push variable to caller
% Bad coding practice to blind-push variables to the caller.  
% Creates potential for clobbering and makes collaborative coding more
% difficult because fields appear in caller memory space undeclared.

varNames=who();
for i=1:length(varNames)
   if ~strcmp(varNames{i},'s')
  assignin('caller',varNames{i},eval(varNames{i}));
   end
end;

return

